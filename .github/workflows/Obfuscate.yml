name: Build and Obfuscate BPB Panel

on:
  push:
    branches:
      - main
  schedule:
    # 每天凌晨1:00运行
    - cron: "0 1 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: 安装依赖项
        run: |
          npm install -g javascript-obfuscator

# 检查当前目录下是否存在 version.txt 文件,如果存在，读取文件内容并赋值给 LOCAL_VERSION 变量
      - name: 获取当前本地版本
        id: get_local_version
        run: |
          if [ -f version.txt ]; then  
            LOCAL_VERSION=$(cat version.txt)
          else # 如果不存在，将 LOCAL_VERSION 设为空字符串
            LOCAL_VERSION=""
          fi # 最后将 LOCAL_VERSION 的值写入 GitHub Actions 的环境变量中（通过 $GITHUB_ENV）
          echo "LOCAL_VERSION=$LOCAL_VERSION" >> $GITHUB_ENV
          echo "当前本地版本: $LOCAL_VERSION"

 #   
      - name: 获取最新Latest版本
        id: get_release_Latest
        run: |
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s "$API_URL")

          # 最新正式版 Latest
          LATEST_TAG=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==false) | .tag_name' | head -n 1)
          #LATEST_DOWNLOAD=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==false) | .assets[] | select(.name=="worker.js") | .browser_download_url' | head -n 1)
          LATEST_DOWNLOAD=$(echo "$RESPONSE" | jq -r ".[] | select(.tag_name==\"$LATEST_TAG\") | .assets[] | select(.name==\"worker.js\") | .browser_download_url")
          # 将获取的值写入写入 GitHub Actions 的环境变量中（通过 $GITHUB_ENV）
          echo "LATEST_DOWNLOAD=$LATEST_DOWNLOAD" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

          echo "最新正式版 Latest: $LATEST_TAG"
          echo "最新正式版 LATEST_DOWNLOAD: $LATEST_DOWNLOAD"

      
      - name: 判断是否需要更新 Latest
        id: check_update
        run: | # 如果本地版本=最新的LATEST版本，就设置UPDATE_NEEDED环境变量为：false ，通过（通过 $GITHUB_ENV）
          if [ "$LOCAL_VERSION" = "$LATEST_TAG" ]; then 
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
            echo "已经是最新 Pre-release 版本"  
          else  # 设置 UPDATE_NEEDED=true，输出"发现新 Pre-release 版本 [版本号]"
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
            echo "发现新 Pre-release 版本 $PRE_RELEASE_TAG"
          fi

      - name: 下载 BPB worker.js
        if: env.UPDATE_NEEDED == 'true'  # 如果 UPDATE_NEEDED 环境变量为：true,执行下面的操作。
        run: |    # wget -O origin.js https://github.com/bia-pain-bache/BPB-Worker-Panel/releases/download/v3.5.1/worker.js
          # echo "最新正式版 LATEST_DOWNLOAD: $LATEST_DOWNLOAD"
           wget -O origin.js "$LATEST_DOWNLOAD"
           echo "$PRE_RELEASE_TAG" > version.txt

      - name: 混淆 BPB worker.js
        if: env.UPDATE_NEEDED == 'true'  # 如果 UPDATE_NEEDED 环境变量为：true,执行下面的操作。
        run: |
          javascript-obfuscator origin.js --output _worker.js \
            --compact true \
            --control-flow-flattening false \
            --dead-code-injection false \
            --identifier-names-generator mangled \
            --rename-globals false \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --unicode-escape-sequence true

      - name: 提交更改
        if: env.UPDATE_NEEDED == 'true'  # 如果 UPDATE_NEEDED 环境变量为：true,执行下面的操作。
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "🔄 自动同步最新 Latest-release Worker：${{ env.LATEST_TAG }}"
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          # push_options: '--set-upstream'
          push_options: --force
